Soundfont path: /Users/mdraiyanbinsayeed/Documents/4B/CS489_audio/cs489-project/backend/app/FluidR3_GM.sf2
Soundfont exists: False
{"openapi": "3.1.0", "info": {"title": "DaScore API", "version": "0.1.0"}, "paths": {"/": {"get": {"tags": ["home"], "summary": "Home", "description": "API home page.\n\nReturns:\n    dict: Basic information about the API", "operationId": "home__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/convert": {"post": {"tags": ["conversion"], "summary": "Convert Audio", "description": "Convert uploaded WAV file to sheet music (MusicXML and PDF).\n\nArgs:\n    file: The WAV file to convert\n    title: Optional title for the sheet music\n    \nReturns:\n    ConversionResult: File ID and status message", "operationId": "convert_audio_convert_post", "parameters": [{"name": "title", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Title"}}], "requestBody": {"required": true, "content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_convert_audio_convert_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConversionResult"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/convert-youtube": {"post": {"tags": ["conversion"], "summary": "Convert Youtube", "description": "Download audio from a YouTube URL, convert to WAV, and generate sheet music.\n\nArgs:\n    youtube_data: The YouTube URL to process\n    \nReturns:\n    ConversionResult: File ID and status message", "operationId": "convert_youtube_convert_youtube_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/YouTubeUrl"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConversionResult"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/convert-spotify": {"post": {"tags": ["conversion"], "summary": "Convert Spotify", "description": "Download audio from a Spotify URL, convert to WAV, and generate sheet music.\n\nArgs:\n    spotify_data: The Spotify URL to process\n    \nReturns:\n    ConversionResult: File ID and status message", "operationId": "convert_spotify_convert_spotify_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SpotifyUrl"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConversionResult"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/convert-url": {"post": {"tags": ["conversion"], "summary": "Convert Url", "description": "Auto-detect URL type (YouTube or Spotify) and process accordingly.\n\nArgs:\n    url_data: The URL to process and optional title\n    \nReturns:\n    ConversionResult: File ID and status message", "operationId": "convert_url_convert_url_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericUrl"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConversionResult"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/download/{file_type}/{file_id}": {"get": {"tags": ["files"], "summary": "Download File", "description": "Download a converted file.\n\nArgs:\n    file_type: Type of file to download (musicxml or pdf)\n    file_id: ID of the file to download\n    \nReturns:\n    FileResponse: The requested file", "operationId": "download_file_download__file_type___file_id__get", "parameters": [{"name": "file_type", "in": "path", "required": true, "schema": {"type": "string", "title": "File Type"}}, {"name": "file_id", "in": "path", "required": true, "schema": {"type": "string", "title": "File Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/preview/{file_id}": {"get": {"tags": ["files"], "summary": "Preview Pdf", "description": "Get the PDF file for preview.\n\nArgs:\n    file_id: ID of the PDF file to preview\n    \nReturns:\n    FileResponse: The PDF file", "operationId": "preview_pdf_preview__file_id__get", "parameters": [{"name": "file_id", "in": "path", "required": true, "schema": {"type": "string", "title": "File Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/musicxml-content/{file_id}": {"get": {"tags": ["files"], "summary": "Get Musicxml Content", "description": "Get the MusicXML content for browser rendering.\n\nArgs:\n    file_id: ID of the MusicXML file\n    \nReturns:\n    Response: The MusicXML content as text/xml", "operationId": "get_musicxml_content_musicxml_content__file_id__get", "parameters": [{"name": "file_id", "in": "path", "required": true, "schema": {"type": "string", "title": "File Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/files/{file_id}": {"get": {"tags": ["files"], "summary": "Get File", "description": "Download a file by ID with file type specified as a query parameter.\n\nArgs:\n    file_id: ID of the file to download\n    type: Type of file to download (musicxml or pdf)\n    \nReturns:\n    FileResponse: The requested file", "operationId": "get_file_files__file_id__get", "parameters": [{"name": "file_id", "in": "path", "required": true, "schema": {"type": "string", "title": "File Id"}}, {"name": "type", "in": "query", "required": false, "schema": {"type": "string", "title": "Type"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["files"], "summary": "Delete Files", "description": "Delete all files associated with a conversion.\n\nArgs:\n    file_id: ID of the files to delete\n    \nReturns:\n    dict: Status message", "operationId": "delete_files_files__file_id__delete", "parameters": [{"name": "file_id", "in": "path", "required": true, "schema": {"type": "string", "title": "File Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/check-files/{file_id}": {"get": {"tags": ["files"], "summary": "Check Files", "description": "Check which files are available for a given file ID.\n\nArgs:\n    file_id: ID of the files to check\n    \nReturns:\n    dict: Available files", "operationId": "check_files_check_files__file_id__get", "parameters": [{"name": "file_id", "in": "path", "required": true, "schema": {"type": "string", "title": "File Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/synthesize/{file_id}": {"get": {"tags": ["audio"], "summary": "Synthesize Audio", "description": "Synthesize audio from MusicXML to WAV.\n\nArgs:\n    file_id: ID of the MusicXML file\n    \nReturns:\n    dict: Status message", "operationId": "synthesize_audio_synthesize__file_id__get", "parameters": [{"name": "file_id", "in": "path", "required": true, "schema": {"type": "string", "title": "File Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/audio/{file_id}": {"get": {"tags": ["audio"], "summary": "Get Audio", "description": "Stream the synthesized audio file.\n\nArgs:\n    file_id: ID of the audio file\n    \nReturns:\n    FileResponse: The audio file", "operationId": "get_audio_audio__file_id__get", "parameters": [{"name": "file_id", "in": "path", "required": true, "schema": {"type": "string", "title": "File Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/uploads/{file_id}": {"get": {"tags": ["audio"], "summary": "Get Original Audio", "description": "Stream the original uploaded audio file.\n\nArgs:\n    file_id: ID of the original audio file\n    \nReturns:\n    FileResponse: The original audio file", "operationId": "get_original_audio_uploads__file_id__get", "parameters": [{"name": "file_id", "in": "path", "required": true, "schema": {"type": "string", "title": "File Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_convert_audio_convert_post": {"properties": {"file": {"type": "string", "format": "binary", "title": "File"}}, "type": "object", "required": ["file"], "title": "Body_convert_audio_convert_post"}, "ConversionResult": {"properties": {"file_id": {"type": "string", "title": "File Id"}, "message": {"type": "string", "title": "Message"}, "has_pdf": {"type": "boolean", "title": "Has Pdf", "default": false}}, "type": "object", "required": ["file_id", "message"], "title": "ConversionResult", "description": "Model for conversion result response."}, "GenericUrl": {"properties": {"url": {"type": "string", "title": "Url"}, "title": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Title"}}, "type": "object", "required": ["url"], "title": "GenericUrl", "description": "Model for generic URL input (YouTube or Spotify)."}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "SpotifyUrl": {"properties": {"url": {"type": "string", "title": "Url"}, "title": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Title"}}, "type": "object", "required": ["url"], "title": "SpotifyUrl", "description": "Model for Spotify URL input."}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "YouTubeUrl": {"properties": {"url": {"type": "string", "title": "Url"}, "title": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Title"}}, "type": "object", "required": ["url"], "title": "YouTubeUrl", "description": "Model for YouTube URL input."}}}}
